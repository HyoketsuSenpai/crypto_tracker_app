// Mocks generated by Mockito 5.4.6 from annotations
// in crypto_tracker_app/test/features/Bookmarks/data/repositories/bookmark_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:crypto_tracker_app/features/Bookmarks/data/datasources/bookmark_local_data_source.dart'
    as _i3;
import 'package:crypto_tracker_app/features/Bookmarks/data/models/coin_model.dart'
    as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUnit_0 extends _i1.SmartFake implements _i2.Unit {
  _FakeUnit_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BookmarkLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookmarkLocalDataSource extends _i1.Mock
    implements _i3.BookmarkLocalDataSource {
  @override
  _i4.Future<_i2.Unit> addBookmark(_i5.CoinModel? coin) =>
      (super.noSuchMethod(
            Invocation.method(#addBookmark, [coin]),
            returnValue: _i4.Future<_i2.Unit>.value(
              _FakeUnit_0(this, Invocation.method(#addBookmark, [coin])),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Unit>.value(
              _FakeUnit_0(this, Invocation.method(#addBookmark, [coin])),
            ),
          )
          as _i4.Future<_i2.Unit>);

  @override
  _i4.Future<List<_i5.CoinModel>> getAllBookmarked() =>
      (super.noSuchMethod(
            Invocation.method(#getAllBookmarked, []),
            returnValue: _i4.Future<List<_i5.CoinModel>>.value(
              <_i5.CoinModel>[],
            ),
            returnValueForMissingStub: _i4.Future<List<_i5.CoinModel>>.value(
              <_i5.CoinModel>[],
            ),
          )
          as _i4.Future<List<_i5.CoinModel>>);

  @override
  _i4.Future<bool> isBookmarked(_i5.CoinModel? coin) =>
      (super.noSuchMethod(
            Invocation.method(#isBookmarked, [coin]),
            returnValue: _i4.Future<bool>.value(false),
            returnValueForMissingStub: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<_i2.Unit> removeBookmark(_i5.CoinModel? coin) =>
      (super.noSuchMethod(
            Invocation.method(#removeBookmark, [coin]),
            returnValue: _i4.Future<_i2.Unit>.value(
              _FakeUnit_0(this, Invocation.method(#removeBookmark, [coin])),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Unit>.value(
              _FakeUnit_0(this, Invocation.method(#removeBookmark, [coin])),
            ),
          )
          as _i4.Future<_i2.Unit>);
}
